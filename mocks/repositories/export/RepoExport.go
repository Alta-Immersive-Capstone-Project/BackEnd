// Code generated by mockery v2.12.3. DO NOT EDIT.

package mocks

import (
	entities "kost/entities"

	mock "github.com/stretchr/testify/mock"
)

// RepoExport is an autogenerated mock type for the RepoExport type
type RepoExport struct {
	mock.Mock
}

// ReportTransaction provides a mock function with given fields: time
func (_m *RepoExport) ReportTransaction(time int) ([]entities.House, error) {
	ret := _m.Called(time)

	var r0 []entities.House
	if rf, ok := ret.Get(0).(func(int) []entities.House); ok {
		r0 = rf(time)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]entities.House)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(time)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type NewRepoExportT interface {
	mock.TestingT
	Cleanup(func())
}

// NewRepoExport creates a new instance of RepoExport. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewRepoExport(t NewRepoExportT) *RepoExport {
	mock := &RepoExport{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
