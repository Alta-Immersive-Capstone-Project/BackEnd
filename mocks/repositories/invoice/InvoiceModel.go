// Code generated by mockery v2.12.3. DO NOT EDIT.

package mocks

import (
	entities "kost/entities"

	mock "github.com/stretchr/testify/mock"
)

// InvoiceModel is an autogenerated mock type for the InvoiceModel type
type InvoiceModel struct {
	mock.Mock
}

// CreateInvoice provides a mock function with given fields: path, transaction
func (_m *InvoiceModel) CreateInvoice(path string, transaction entities.TransactionUpdateResponse) string {
	ret := _m.Called(path, transaction)

	var r0 string
	if rf, ok := ret.Get(0).(func(string, entities.TransactionUpdateResponse) string); ok {
		r0 = rf(path, transaction)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// CreateReport provides a mock function with given fields: path, transactions
func (_m *InvoiceModel) CreateReport(path string, transactions []entities.TransactionKost) string {
	ret := _m.Called(path, transactions)

	var r0 string
	if rf, ok := ret.Get(0).(func(string, []entities.TransactionKost) string); ok {
		r0 = rf(path, transactions)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

type NewInvoiceModelT interface {
	mock.TestingT
	Cleanup(func())
}

// NewInvoiceModel creates a new instance of InvoiceModel. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewInvoiceModel(t NewInvoiceModelT) *InvoiceModel {
	mock := &InvoiceModel{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
