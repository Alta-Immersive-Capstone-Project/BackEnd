// Code generated by mockery v2.12.3. DO NOT EDIT.

package mocks

import (
	entities "kost/entities"

	mock "github.com/stretchr/testify/mock"
)

// AuthServiceInterface is an autogenerated mock type for the AuthServiceInterface type
type AuthServiceInterface struct {
	mock.Mock
}

// Login provides a mock function with given fields: AuthReq
func (_m *AuthServiceInterface) Login(AuthReq entities.AuthRequest) (entities.LoginResponse, error) {
	ret := _m.Called(AuthReq)

	var r0 entities.LoginResponse
	if rf, ok := ret.Get(0).(func(entities.AuthRequest) entities.LoginResponse); ok {
		r0 = rf(AuthReq)
	} else {
		r0 = ret.Get(0).(entities.LoginResponse)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(entities.AuthRequest) error); ok {
		r1 = rf(AuthReq)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type NewAuthServiceInterfaceT interface {
	mock.TestingT
	Cleanup(func())
}

// NewAuthServiceInterface creates a new instance of AuthServiceInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewAuthServiceInterface(t NewAuthServiceInterfaceT) *AuthServiceInterface {
	mock := &AuthServiceInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
