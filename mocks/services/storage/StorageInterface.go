// Code generated by mockery v2.12.3. DO NOT EDIT.

package mocks

import (
	multipart "mime/multipart"

	mock "github.com/stretchr/testify/mock"
)

// StorageInterface is an autogenerated mock type for the StorageInterface type
type StorageInterface struct {
	mock.Mock
}

// Delete provides a mock function with given fields: fileNamePath
func (_m *StorageInterface) Delete(fileNamePath string) error {
	ret := _m.Called(fileNamePath)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(fileNamePath)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UploadFromRequest provides a mock function with given fields: fileNamePath, fileHeader
func (_m *StorageInterface) UploadFromRequest(fileNamePath string, fileHeader *multipart.FileHeader) (string, error) {
	ret := _m.Called(fileNamePath, fileHeader)

	var r0 string
	if rf, ok := ret.Get(0).(func(string, *multipart.FileHeader) string); ok {
		r0 = rf(fileNamePath, fileHeader)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, *multipart.FileHeader) error); ok {
		r1 = rf(fileNamePath, fileHeader)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type NewStorageInterfaceT interface {
	mock.TestingT
	Cleanup(func())
}

// NewStorageInterface creates a new instance of StorageInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewStorageInterface(t NewStorageInterfaceT) *StorageInterface {
	mock := &StorageInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
